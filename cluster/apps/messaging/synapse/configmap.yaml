---
kind: ConfigMap
apiVersion: v1
metadata:
  name: synapse-configmap
  namespace: messaging
data:
  init.sql: |
    create extension if not exists dblink;
    DO
    $do$
    BEGIN
      IF
        EXISTS (
          SELECT FROM pg_catalog.pg_roles
          WHERE  rolname = 'synapse') THEN

          RAISE NOTICE 'Role "synapse" already exists. Skipping.';
        ELSE
          BEGIN   -- nested block
            CREATE ROLE synapse LOGIN PASSWORD '${SYNAPSE_DB_PASSWORD}';
          EXCEPTION
            WHEN duplicate_object THEN
              RAISE NOTICE 'Role "synapse" was just created by a concurrent transaction. Skipping.';
          END;
      END IF;
    END
    $do$;
    DO
    $do$
    BEGIN
       IF EXISTS (SELECT FROM pg_database WHERE datname = 'synapse') THEN
          RAISE NOTICE 'Database already exists';  -- optional
       ELSE
          PERFORM dblink_exec('dbname=' || current_database()  -- current db
                            , 'CREATE DATABASE synapse OWNER synapse LC_CTYPE ''C.UTF-8'' LC_COLLATE ''C.UTF-8'' ENCODING ''UTF8'' template template0');
       END IF;
    END
    $do$

  homeserver.yaml: |
    # vim:ft=yaml

    ## TLS ##


    tls_certificate_path: "/data/broetje.online.tls.crt"
    tls_private_key_path: "/data/broetje.online.tls.key"


    ## Server ##

    server_name: "broetje.online"
    pid_file: /homeserver.pid
    web_client: False
    soft_file_limit: 0
    log_config: "/data/log.config"

    ## Ports ##

    listeners:
      # Allow configuring in case we want to reverse proxy 8008
      # using another process in the same container
      - port: 8008
        tls: false
        bind_addresses: ['::']
        type: http
        x_forwarded: false

        resources:
          - names: [client]
            compress: true
          - names: [federation]
            compress: false

    ## Database ##
    database:
      name: psycopg2
      args:
        user: synapse
        password: ${SYNAPSE_DB_PASSWORD}
        database: synapse
        host: postgres.db
        cp_min: 5
        cp_max: 10


    ## Performance ##

    event_cache_size: "10K"

    ## Ratelimiting ##

    rc_messages_per_second: 0.2
    rc_message_burst_count: 10.0
    federation_rc_window_size: 1000
    federation_rc_sleep_limit: 10
    federation_rc_sleep_delay: 500
    federation_rc_reject_limit: 50
    federation_rc_concurrent: 3

    ## Files ##

    media_store_path: "/data/media"
    max_upload_size: "50M"
    max_image_pixels: "32M"
    dynamic_thumbnails: false

    # List of thumbnail to precalculate when an image is uploaded.
    thumbnail_sizes:
    - width: 32
      height: 32
      method: crop
    - width: 96
      height: 96
      method: crop
    - width: 320
      height: 240
      method: scale
    - width: 640
      height: 480
      method: scale
    - width: 800
      height: 600
      method: scale

    url_preview_enabled: False
    max_spider_size: "10M"

    ## Captcha ##
    #recaptcha_public_key: "YOUR_PUBLIC_KEY"
    #recaptcha_private_key: "YOUR_PRIVATE_KEY"
    #enable_registration_captcha: False
    #recaptcha_siteverify_api: "https://www.google.com/recaptcha/api/siteverify"
    ## Turn ##
    turn_uris: []
    turn_shared_secret: "YOUR_SHARED_SECRET"
    turn_user_lifetime: "1h"
    turn_allow_guests: True
    ## Registration ##
    enable_registration: False
    registration_shared_secret: "${REGISTRATION_SHARED_SECRET}"
    bcrypt_rounds: 12
    allow_guest_access: False
    enable_group_creation: true


    ## Metrics ###


    enable_metrics: True
    report_stats: True


    ## API Configuration ##

    macaroon_secret_key: "${BROETJE_ONLINE_MACAROON_KEY}"
    expire_access_token: False

    ## Signing Keys ##

    signing_key_path: "/data/broetje.online.signing.key"
    old_signing_keys: {}
    key_refresh_interval: "1d" # 1 Day.

    # The trusted servers to download signing keys from.
    trusted_key_servers:
      - server_name: matrix.org
        verify_keys:
          "ed25519:auto": "Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw"

    password_config:
       enabled: true

    public_baseurl: https://matrix.broetje.online/
    modules:
      - module: "ldap_auth_provider.LdapAuthProviderModule"
        config:
          enabled: true
          uri: "ldap://lldap.lldap:3890"
          start_tls: false
          base: "ou=people,dc=broetje,dc=online"
          attributes:
            uid: "uid"
            mail: "mail"
            name: "cn"
            bind_dn: "uid=admin,ou=people,dc=broetje,dc=online"
            bind_password: "${LLDAP_LDAP_USER_PASS}"
            filter: "(objectClass=person)"

    # AppServices
    app_service_config_files:
      - /data/whatsapp-registration.yaml

    # vim:ft=yaml
  broetje.online.signing.key: |
    ${BROETJE_ONLINE_SIGNING_KEY}
  broetje.online.registration.key: |
    ${BROETJE_ONLINE_REGISTRATION_KEY}
  broetje.online.macaroon.key: |
    ${BROETJE_ONLINE_MACAROON_KEY}
  log.config: |
    version: 1

    formatters:
      precise:
        format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s - %(message)s'

    handlers:


      console:
        class: logging.StreamHandler
        formatter: precise

    loggers:
        synapse.storage.SQL:
            # beware: increasing this to DEBUG will make synapse log sensitive
            # information such as access tokens.
            level: INFO

    root:
        level: INFO


        handlers: [console]


    disable_existing_loggers: false

  whatsapp-registration.yaml: |
    id: whatsapp
    url: http://mautrix-whatsapp:29318
    as_token: ${MAUTRIX_WA_AS_TOKEN}
    hs_token: ${MAUTRIX_WA_HS_TOKEN}
    sender_localpart: ${MAUTRIX_WA_SENDER_LOCALPART}
    rate_limited: false
    namespaces:
      users:
        - regex: ^@whatsappbot:broetje\.online$
          exclusive: true
        - regex: ^@whatsapp_[0-9]+:broetje\.online$
          exclusive: true
